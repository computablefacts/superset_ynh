#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
x-superset-image: &superset-image computablefacts/superset-for-swarm-custom:1.5.2.2
x-superset-env: &superset-env
  # database configurations
  - DATABASE_DIALECT=mysql+mysqlconnector
  - DATABASE_HOST=${DATABASE_HOST:-host.docker.internal}
  - DATABASE_PORT=${DATABASE_PORT:-3306}
  - DATABASE_USER=${DATABASE_USER}
  - DATABASE_PASSWORD=${DATABASE_PASSWORD}
  - DATABASE_DB=${DATABASE_DB}

  - REDIS_HOST=redis
  - REDIS_PORT=6379

  - SECRET_KEY=${SECRET_KEY}
  - FLASK_ENV=production
  - SUPERSET_ENV=production
  - SUPERSET_LOAD_EXAMPLES=no
  - CYPRESS_CONFIG=false
  - SUPERSET_PORT=${SUPERSET_PORT:-8088}
  
  - OIDC_ENABLE=${OIDC_ENABLE:-False}
  - OIDC_OPENID_REALM=${OIDC_OPENID_REALM}

  - EMAIL_NOTIFICATIONS=${EMAIL_NOTIFICATIONS:-False}
  - WEBDRIVER_BASEURL=${WEBDRIVER_BASEURL}
  - WEBDRIVER_BASEURL_USER_FRIENDLY=${WEBDRIVER_BASEURL_USER_FRIENDLY}
  - SMTP_HOST=${SMTP_HOST}
  - SMTP_USER=${SMTP_USER}
  - SMTP_PORT=${SMTP_PORT}
  - SMTP_PASSWORD=${SMTP_PASSWORD}
  - SMTP_MAIL_FROM=${SMTP_MAIL_FROM}

  - SCREENSHOT_LOCATE_WAIT=20
  - SCREENSHOT_LOAD_WAIT=120
  - SCREENSHOT_SELENIUM_HEADSTART=6
  - SCREENSHOT_SELENIUM_ANIMATION_WAIT=10

  - CELERY_WORKER_LOG_LEVEL=INFO


version: "3.7"

networks:
  redis-net:
  selenium-net:

# {% if oidc_enable is defined and oidc_enable %}  
# configs:
#   {{ oidc_client_config }}:
#     external: true
# {% endif %}


services:
  redis:
    image: redis:6.2
    command: bash -c "redis-server --save "" --maxmemory-policy allkeys-lru --loglevel warning"
    networks:
      redis-net:
        aliases:
          - redis
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 512M
        reservations:
          cpus: "0.1"
          memory: 64M

  superset:
    image: *superset-image
    environment: *superset-env
    command: ["/app/docker/docker-bootstrap.sh", "app-gunicorn"]
    user: "root"
    ports:
    - target: 8088
      published: __PORT__
    extra_hosts:
      host.docker.internal: host-gateway
    networks:
      selenium-net:
        aliases:
          - a_changer
      redis-net:
# {% if oidc_enable is defined and oidc_enable %}  
#     configs:
#       - source: {{ oidc_client_config }}
#         target: /app/pythonpath/client_secret.json
# {% endif %}

  superset-init:
    image: *superset-image
    environment: *superset-env
    command: ["/app/docker/docker-init.sh"]
    healthcheck:
      disable: true
    user: "root"
    extra_hosts:
      host.docker.internal: host-gateway
    networks:
      - redis-net
    deploy:
      restart_policy:
        condition: on-failure
# {% if oidc_enable is defined and oidc_enable %}  
#     configs:
#       - source: {{ oidc_client_config }}
#         target: /app/pythonpath/client_secret.json
# {% endif %}

  superset-worker:
    image: *superset-image
    environment: *superset-env
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    healthcheck:
      disable: true
    user: "root"
    extra_hosts:
      host.docker.internal: host-gateway
    networks:
      - selenium-net
      - redis-net
# {% if oidc_enable is defined and oidc_enable %}  
#     configs:
#       - source: {{ oidc_client_config }}
#         target: /app/pythonpath/client_secret.json
# {% endif %}

  superset-worker-beat:
    image: *superset-image
    environment: *superset-env
    command: ["/app/docker/docker-bootstrap.sh", "beat"]
    healthcheck:
      disable: true
    user: "root"
    extra_hosts:
      host.docker.internal: host-gateway
    networks:
      - redis-net
# {% if oidc_enable is defined and oidc_enable %}  
#     configs:
#       - source: {{ oidc_client_config }}
#         target: /app/pythonpath/client_secret.json
# {% endif %}
